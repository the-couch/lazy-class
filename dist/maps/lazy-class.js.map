{"version":3,"file":null,"sources":["/Users/kevingreen/Sites/lazy-class/src/lazy-class.js"],"sourcesContent":["\nlet classSwap = (e, change, className) => {\n  switch(change) {\n    case 'add':\n      e.classList.add(className)\n      break\n    case 'remove':\n      e.classList.remove(className)\n      break\n    case 'toggle':\n      e.classList.toggle(className)\n      break\n    default:\n      console.log('invalid value for change option specified')\n  }\n}\n\n/**\n *  @param  {object|...array} el dom element/s\n *  @param  {string} className long to wait for a response\n *  @param  {number} timing in milliseconds\n *  @param  {options} options object\n */\n\nlet lazy = (el, className, timing, options = {}) => {\n  let change = options.change || 'add'\n  let sT = (e) => {\n    setTimeout(() => { classSwap(e, change, className) }, timing)\n  }\n  el.length ? [].forEach.call(el, (e) => { sT(e) }) : sT(el)\n}\n\nexports.lazy = lazy\n"],"names":["classSwap","e","change","className","classList","add","remove","toggle","log","lazy","el","timing","options","sT","length","forEach","call","exports"],"mappings":"yJACA,IAAIA,GAAY,SAACC,EAAGC,EAAQC,UACnBD,OACA,QACDE,UAAUC,IAAIF,aAEb,WACDC,UAAUE,OAAOH,aAEhB,WACDC,UAAUG,OAAOJ,yBAGXK,IAAI,+CAWdC,EAAO,SAACC,EAAIP,EAAWQ,MAAQC,6DAC7BV,EAASU,EAAQV,QAAU,MAC3BW,EAAK,SAACZ,cACG,aAAkBA,EAAGC,EAAQC,IAAcQ,MAErDG,UAAYC,QAAQC,KAAKN,EAAI,SAACT,KAAWA,KAAQY,EAAGH,GAGzDO,SAAQR,KAAOA"}